// ðŸ¦• AUTOGENERATED! DO NOT EDIT! File to edit: server.ipynb

import { Hono } from "hono";
import { downloadPostToMd } from "bsky2md/bsky.ts";
import showdown from "showdown";

export const app = new Hono();

const Layout = ({ children }: { children: string }) => `
  <html>
  <head>
    <meta charset="UTF-8">
    <title>bsky2md</title>
    <link rel="stylesheet" href="https://unpkg.com/blocks.css/dist/blocks.min.css" />
    <script src="https://unpkg.com/htmx.org@2.0.4"></script>
    <style>
      body { padding: 20px; background-color: #ffffff; }
      .htmx-indicator{
        opacity:0;
        transition: opacity 500ms ease-in;
    }
    .htmx-request .htmx-indicator{
        opacity:1;
    }
    .htmx-request.htmx-indicator{
        opacity:1;
    }
    </style>
  </head>
  <body>
    ${children}
  </body>
  </html>
`;

app.get("/", (c) => {
  const url = c.req.query("url");
  return c.html(
    Layout({
      children: url
        ? `
        <input hx-indicator="#spinner" hx-post="/convert" name="url" hx-target="#result" value="${url}" type="text" class="block" placeholder="Enter URL" />
        <img class="htmx-indicator" src="https://htmx.org/img/bars.svg" id="spinner" /> 
        <div hx-indicator="#spinner" hx-post="/convert" hx-trigger="load" hx-vals='{"url": "${url}"}' hx-target="#result" id="result"></div>
      `
        : `
      <input hx-indicator="#spinner" hx-post="/convert" name="url" hx-target="#result" type="text" class="block" placeholder="Enter URL" />
      <img class="htmx-indicator" src="https://htmx.org/img/bars.svg" id="spinner" /> 
      <div hx-indicator="#spinner" id="result"></div>
    `,
    }),
  );
});

app.post("/convert", async (c) => {
  // get the URL from the form
  // const url = c.req.body.url;
  const d = (await c.req.formData()).get("url");

  if (!d) {
    return c.html("<h1>URL is required</h1>");
  }
  const md = await downloadPostToMd(d.toString());
  const converter = new showdown.Converter();
  const html = converter.makeHtml(md);
  return c.html(`
    <code>${md.replace(/\n/g, "<br>")}</code>
    <hr />
${html}
  `);
});
